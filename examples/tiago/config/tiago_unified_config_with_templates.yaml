# TIAGo Robot Configuration - Template Path Examples
# This file demonstrates different ways to handle template paths

# OPTION 1: Use templates directory relative to this config file (local)
# extends: "templates/local_template.yaml"

# OPTION 2: Use templates directory in project root (searches multiple locations)
extends: "templates/humanoid_robot.yaml"

# OPTION 3: Use explicit relative path
# extends: "../../../templates/humanoid_robot.yaml"

# OPTION 4: No inheritance - standalone configuration
# Comment out extends to use standalone mode

# TIAGo-specific robot configuration
robot:
  name: "tiago"
  description: "PAL Robotics TIAGo mobile manipulator robot"
  
  properties:
    # TIAGo joint configuration (torso + arm)
    joints:
      active_joints: [
        "torso_lift_joint",
        "arm_1_joint", "arm_2_joint", "arm_3_joint", "arm_4_joint",
        "arm_5_joint", "arm_6_joint", "arm_7_joint"
      ]
      joint_limits:
        velocity: [0.05009095, 0.05009095, 0.07504916, 0.0715585, 0.05585054, 0.12217305]
        acceleration: [20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0]
        torque: [4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0]
    
    # TIAGo mechanical properties  
    mechanics:
      reduction_ratios: [32.0, 32.0, 45.0, -48.0, 45.0, 32.0]
      ratio_essential: 30.0
      friction_coefficients:
        viscous: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        static: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      actuator_inertias: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      joint_offsets: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    
    # TIAGo has coupled wrist
    coupling:
      has_coupled_wrist: true
      Iam6: 0
      fvm6: 0
      fsm6: 0
      
    # Mobile base properties (overrides template)
    mobility:
      has_mobile_base: true
      base_type: "differential_drive"
      max_linear_velocity: 1.0
      max_angular_velocity: 2.0
      
    # Sensor configuration (extends template)
    sensors:
      has_head_camera: true
      has_torso_camera: false
      has_ft_sensors: true
      camera_type: "rgbd"

# TIAGo task configurations (extends template tasks)
tasks:
  calibration:
    # Inherits from template and overrides specific parameters
    parameters:
      outlier_threshold: 0.022  # TIAGo-specific precision (2.2cm)
      
    kinematics:
      base_frame: "universe"
      tool_frame: "wrist_ft_tool_link"
      
    measurements:
      markers:
        - name: "wrist_marker"
          reference_joint: "arm_7_joint"
          measurable_dof: [true, true, true, false, false, false]
          sensor_type: "mocap"
          
      poses:
        base_pose: [0.0908, 0.08, 0.0, -1.57, 0.0, 0.0]
        tool_pose: [0.2163, 0.03484, 0.004, 0.0, -1.57, -1.57]
    
    data:
      source_file: "data/calibration/mocap/qualysis_base_hand_calibration.csv"
      sample_configurations_file: "data/optimal_configs/eye_hand_calibration_tiago_hey5_100.yaml"
      number_of_samples: 500

  identification:
    # Inherits from template and adds TIAGo-specific settings
    problem:
      include_external_forces: true  # TIAGo has F/T sensors
      force_torque_sensors: ["wrist_ft_sensor"]
        
    signal_processing:
      sampling_frequency: 5000.0  # High rate due to 1/0.0002 = 5000Hz
      cutoff_frequency: 100.0

  optimal_configuration:
    enabled: true  # Enable this task for TIAGo
    
    parameters:
      number_of_samples: 100
      optimization_objectives: ["condition_number", "manipulability"]
      
    output:
      output_file: "data/optimal_configs/tiago_optimal_configs.yaml"

# TIAGo-specific custom parameters
custom:
  manufacturer: "PAL Robotics"
  gripper_type: "hey5"  # hey5, parallel, none
  additional_sensors: ["laser", "imu", "bumpers"]

# Configuration variants for different TIAGo setups
variants:
  # Motion capture calibration variant
  mocap_calibration:
    extends: "tasks.calibration"
    kinematics:
      base_frame: "head_2_joint"
      tool_frame: "wrist_ft_tool_link"
    data:
      source_file: "data/optitrack_camera_hand_calibration_test3.csv"
      outlier_threshold: 0.022

  # Eye-hand calibration with camera
  eye_hand_calibration:
    extends: "tasks.calibration"
    kinematics:
      base_frame: "xtion_rgb_optical_frame"
      tool_frame: "gripper_link"
    eye_hand:
      enabled: true
      camera_frame: "xtion_link"
      reference_frame: "head_2_joint"
